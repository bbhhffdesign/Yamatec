@use "./mixins" as *;
@use "./variables" as *;

// html{
// }
// *{
//     // color: black;
// }

*{
  box-sizing: border-box;
}
body {
  color: black;
  margin: 0;
}

h1,
h2,
h3,
h4 {

  &.txt-white{
    
    color: white;
  }
  font-family: $neueRegular;

  strong {
    font-family: $neueBold;
  }
}
h1 {
  margin: 0;
  // font-size: clamp(2rem, -3.106rem + 25.532vw, 3.5rem);
  line-height: 90%;
  font-size: clamp(2.5rem, -0.904rem + 17.021vw, 3.5rem);
  // text-shadow: 0px 2px white;
  // @include apply-typography(h1)
}
h2 {
  @include apply-typography(h2);
}
h3 {
  @include apply-typography(h3);
}
h4 {
  @include apply-typography(h4);
}

p {
  @include apply-typography(p);
  font-family: $robotoRegular;
  line-height: 100%;

  &.txt-white{
    
    color: white;
  }

  strong {
    font-family: $robotoBold;
  }
}
small {
  @include apply-typography(small);
  font-family: $robotoRegular;
}
.app {
  width: 100vw;
  height: auto;
  // overflow-x: hidden;
}
section {
  width: 100vw;
  overflow-x: hidden;
}

.img-container {
  display: inline-block; /* o block, según tu necesidad */
  max-width: 100%; /* asegura que no exceda el ancho del padre */
  overflow: hidden; /* oculta desbordes si la imagen es más grande */
  position: relative; /* útil si vas a posicionar elementos encima */

  img {
    display: block; /* elimina espacios en blanco debajo de la imagen */
    max-width: 100%; /* la hace responsive */
    height: auto; /* mantiene la proporción */
  }
}

.separator{
  width: 100%;
  height: 12.5svh;
  
  &.sm{
    height: 25svh;
  }
  &.md{
    height: 50svh;
  }
  &.lg{
    height: 100svh;
    
    // @include dev-xs{
    //   height: 28rem;
    // }
    // @include dev-sm{
    //   height: 10rem;
    // }
  }
}
